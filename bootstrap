#!/usr/bin/env bash

# DOTFILES_ROOT=$(dirname "${BASH_SOURCE[0]:-$0}")
DOTFILES_ROOT=$(cd $(dirname ${BASH_SOURCE:-$0}); pwd -P)

set -e

RED=$'\e[1;31m'
GREEN=$'\e[1;32m'
END=$'\e[0m'

fail () {
  printf "\n${RED}[ FAIL ] $1\n"
  echo ""
  exit 1
}

success () {
  printf "\n${GREEN}[ OK ] $1\n"
  echo ""
}

# ----------------------
# Install tools
# ----------------------

install_homebrew() {
  echo "Setup Homebrew..."
  # install homebrew
  if hash brew 2>/dev/null; then
    echo "Homebrew is already installed"
  else
    echo "Installing Homebrew..."

    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

    success 'Homebrew'
  fi
}

install_packages_via_homebrew() {
  echo "Installing packages via Homebrew..."

  if ! command -v brew >/dev/null 2>&1; then
    echo "brew command could not be found"
    exit
  fi

  if [ ! -f "$DOTFILES_ROOT/brew/Brewfile" ]; then
    fail '.Brewfile was not found.'
  fi

  if [ ! -L "$HOME/.Brewfile" ]; then
    ln -s "$DOTFILES_ROOT/brew/Brewfile" "$HOME/.Brewfile"
  fi

  export HOMEBREW_BUNDLE_MAS_SKIP=$(brew bundle list --global --mas | paste -sd " " -)
  brew bundle install --global || true

  wait
  success 'Packages Installation by Homebrew'
}

setup_anyenv() {
  echo "Setup anyenv..."

  if command anyenv -v &> /dev/null; then
    echo "anyenv is already installed."
  else
    echo "Install anyenv..."
    brew install anyenv

    echo "Initialize anyenv"
    anyenv init

    mkdir -p $(anyenv root)/plugins
    git clone "https://github.com/znz/anyenv-update.git" "$(anyenv root)/plugins/anyenv-update"
  fi

  anyenv init 2>/dev/null || true
  # exec $SHELL -l

  # mkdir -p $(anyenv root)/plugins
  # git clone "https://github.com/znz/anyenv-update.git" "$(anyenv root)/plugins/anyenv-update"

  # anyenv update || true
  # anyenv install nodenv
  # anyenv install rbenv

  success 'Setup anyenv'
}

setup_nodejs_tools() {
  echo "Setup nodejs tools..."

  if command volta -v &> /dev/null; then
    echo "volta is already installed."
    echo ""
  else
    echo "Install volta..."
    curl https://get.volta.sh | bash -s -- --skip-setup
  fi

  success 'Setup nodejs tools'
}

set_default_shell() {
  if [[ $(basename $SHELL) != "zsh" ]] && [[ "$(uname -m)" = "x86_64" ]]; then
    if [[ "$SHELL" != "/usr/local/bin/zsh" ]]; then
      sudo bash -c 'echo "/usr/local/bin/zsh" >> /etc/shells'
      sudo chsh -s /usr/local/bin/zsh
    fi
    success 'Setup default shell'
  fi
}

# ----------------------
# Set symlinks
# ----------------------

create_symlinks() {
  echo "Create symlinks..."

  for file in .??*
  do
    [ "$file" = ".git" ] && continue
    [ "$file" = ".github" ] && continue
    [ "$file" = ".vimrc.*" ] && continue

    local src="$DOTFILES_ROOT/$file"
    local dst="$HOME/$file"

    if [[ -f "$dst" || -d "$dst" || -L "$dst" ]]; then
      printf "File already exists."
      continue
    fi

    ln -s $src $dst
    success "linked $src to $dst"
  done

  success 'Symlinks'
}

# ----------------------
# Local config files
# ----------------------

create_local_config_files() {
  local gitconfig_local = "$Home/.gitconfig.local"
  if [ ! -f "$gitconfig_local" ]; then
    echo "# [user]" > $gitconfig_local
    echo "#   name = m-yoshiro" >> $gitconfig_local
    echo "#   email = massugu.massugu@gmail.com" >> $gitconfig_local
  fi

  local zshrc_local = "$Home/.zshrc.local"
  if [ ! -f "$zshrc_local" ]; then
    echo "# zshrc for local configuration" > $zshrc_local
  fi
}

# ----------------------
# Main
# ----------------------

if [[ $1 == "all" ]] || [ -z $1 ]; then
  install_homebrew
  install_packages_via_homebrew

  set_default_shell
  setup_anyenv

  create_symlinks

  success 'Bootstrap'
fi
